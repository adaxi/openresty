Source: openresty
Section: net
Priority: optional
Maintainer: Gerik Bonaert <dev@adaxisoft.be>
Build-Depends: debhelper (>= 9), autotools-dev, libreadline-dev libncurses5-dev libpcre3-dev, libssl-dev, perl
Standards-Version: 3.9.5
Homepage: https://openresty.org/
Vcs-Git: git://github.com/openresty/openresty.git
Vcs-Browser: https://github.com/openresty/openresty

Package: openresty
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic web platform based on NGINX and LuaJIT
 OpenResty â„¢ is a full-fledged web platform by integrating the standard
 Nginx core, LuaJIT, many carefully written Lua libraries, lots of high
 quality 3rd-party Nginx modules, and most of their external
 dependencies. It is designed to help developers easily build scalable
 web applications, web services, and dynamic web gateways.
 .
 By taking advantage of various well-designed Nginx modules (most of
 which are developed by the OpenResty team themselves), OpenResty 
 effectively turns the nginx server into a powerful web app server, in 
 which the web developers can use the Lua programming language to script
 various existing nginx C modules and Lua modules and construct extremely
 high-performance web applications that are capable to handle
 10K ~ 1000K+ connections in a single box.
 .
 OpenResty aims to run your server-side web app completely in the Nginx 
 server, leveraging Nginx's event model to do non-blocking I/O not only
 with the HTTP clients, but also with remote backends like MySQL,
 PostgreSQL, Memcached, and Redis.
 .
 Real-world applications of OpenResty range from dynamic web portals and
 web gateways, web application firewalls, web service platforms for mobile
 apps/advertising/distributed storage/data analytics, to full-fledged
 dynamic web applications and web sites. The hardware used to run OpenResty
 also ranges from very big metals to embedded devices with very limited
 resources. It is not uncommon for our production users to serve billions
 of requests daily for millions of active users with just a handful of
 machines.
